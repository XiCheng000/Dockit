name: Dockit Development Build

on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        default: 'main'
        description: 'branch'
        required: true
      release-new-build:
        type: boolean
        default: false
        description: 'Release new build'
        required: true

jobs:
  pre-release:
    name: Development Build
    runs-on: macos-14
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch }}

      - name: üß™ Set Version and Build number
        run: |
          # CHANGE EVERY RELEASE:
          APP_VERSION="0.0.5"
          APP_BUILD=$(git rev-list --count HEAD)
          FROM_TAG=$(git describe --tags --abbrev=0 --exclude='prerelease')

          # Set VERSION
          latest_tag=$APP_VERSION
          echo "Latest tag: $latest_tag"
          sed -i -e "/VERSION =/ s/= .*/= $latest_tag/" Dockit/Config.xcconfig

          # Set BUILD_NUMBER
          latest_commit_number=$APP_BUILD
          echo "Latest commit number: $latest_commit_number"
          sed -i -e "/BUILD_NUMBER =/ s/= .*/= $latest_commit_number/" Dockit/Config.xcconfig

          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "APP_BUILD=$APP_BUILD" >> $GITHUB_ENV
          echo "FROM_TAG=$FROM_TAG" >> $GITHUB_ENV

      - name: üîß Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode_16.2.app"

      - name: üõ†Ô∏è Build Dockit
        run: |
          xcodebuild \
            archive \
            -project Dockit.xcodeproj/ \
            -scheme "Dockit" \
            -destination 'generic/platform=macOS' \
            -archivePath dist/Dockit.xcarchive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO

      - name: ü•° Export Dockit.app
        run: |
          xcodebuild \
            -exportArchive \
            -archivePath dist/Dockit.xcarchive \
            -exportPath dist/ \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO

      - name: ü§è Compress Dockit.app
        run: |
          ditto -c -k --sequesterRsrc --keepParent "dist/Dockit.app" "dist/Dockit.zip"
      
      - name: ‚¨ÜÔ∏è Upload Dockit
        uses: actions/upload-artifact@v4
        with:
          name: Dockit
          path: dist/Dockit.zip

      - name: üè∑Ô∏è Create/update tag
        uses: actions/github-script@v7
        if: "${{ inputs.release-new-build }}"
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/prerelease',
              sha: context.sha
            }).catch(err => {
              if (err.status !== 422) throw err;
              github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/prerelease',
                sha: context.sha
              });
            })

      - name: üì∞ Build Changelog
        uses: mikepenz/release-changelog-builder-action@v4
        if: "${{ inputs.release-new-build }}"
        with:
          outputFile: CHANGELOG.md
          fromTag: ${{ env.FROM_TAG }}
          toTag: "prerelease"
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n## üí≠ Uncategorized\n#{{UNCATEGORIZED}}",
              "pr_template": "- #{{TITLE}} ##{{NUMBER}}",
              "categories": [
                {
                    "title": "## ‚ú® New Features",
                    "labels": ["Feature", "Luminare", "Improvement"]
                },
                {
                    "title": "## üêû Bug Fixes",
                    "labels": ["Bug"]
                },
                {
                    "title": "## üåê Localization",
                    "labels": ["Localization"]
                }
              ],
              "empty_template": "- ‚ùå No changes found"
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ü•≥ Publish Dev Build
        uses: ncipollo/release-action@v1
        if: "${{ inputs.release-new-build }}"
        with:
          allowUpdates: true
          artifacts: dist/Dockit.zip
          commit: main
          bodyFile: CHANGELOG.md
          name: "Development Build: ${{ env.APP_VERSION }} (${{ env.APP_BUILD }})"
          prerelease: true
          tag: "prerelease"
